--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: EventMachine::Connection#send_data is only called by user code, never by the event loop. You call this method to send data to the remote end of the network connection. send_data is called with a single String argument, which may of course contain binary data. You can call send_data any number of times. send_data is an instance method of an object derived from EventMachine::Connection and containing your mixed-in handler code), so if you call it without qualification within a callback function, the data will be sent to the same network connection that generated the callback. Calling self.send_data is exactly equivalent.
- !ruby/struct:SM::Flow::P 
  body: You can also call send_data to write to a connection <em>other than the one whose callback you are calling send_data from.</em> This is done by recording the value of the connection in any callback function (the value self), in any variable visible to other callback invocations on the same or different connection objects. (Need an example to make that clear.)
full_name: EventMachine::Connection#send_data
is_singleton: false
name: send_data
params: (data)
visibility: public
