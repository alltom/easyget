--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Rack application (adapter) served by this connection.
  name: app
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Backend to the server
  name: backend
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Current request served by the connection
  name: request
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Next response sent through the connection
  name: response
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Calling the application in a threaded allowing concurrent processing of requests.
  name: threaded
  rw: W
class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Connection between the server and client. This class is instanciated by EventMachine on each new connection that is opened.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: CONTENT_LENGTH
  value: "'Content-Length'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: TRANSFER_ENCODING
  value: "'Transfer-Encoding'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: CHUNKED_REGEXP
  value: /\bchunked\b/i.freeze
full_name: Thin::Connection
includes: 
- !ruby/object:RI::IncludedModule 
  name: Logging
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: can_persist!
- !ruby/object:RI::MethodSummary 
  name: can_persist?
- !ruby/object:RI::MethodSummary 
  name: handle_error
- !ruby/object:RI::MethodSummary 
  name: persistent?
- !ruby/object:RI::MethodSummary 
  name: post_init
- !ruby/object:RI::MethodSummary 
  name: post_process
- !ruby/object:RI::MethodSummary 
  name: pre_process
- !ruby/object:RI::MethodSummary 
  name: process
- !ruby/object:RI::MethodSummary 
  name: receive_data
- !ruby/object:RI::MethodSummary 
  name: remote_address
- !ruby/object:RI::MethodSummary 
  name: socket_address
- !ruby/object:RI::MethodSummary 
  name: terminate_request
- !ruby/object:RI::MethodSummary 
  name: threaded?
- !ruby/object:RI::MethodSummary 
  name: unbind
name: Connection
superclass: EventMachine::Connection
